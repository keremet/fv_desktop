Таблицы базы данных сгруппированы при помощи префиксов в их названиях:
"orv_" - относящиеся к ОРВ в целом, общие для всех или нескольких направлении,
"fv_" - относящиеся к финансовой взаимовыручке.

Пользователь вводит выдачу и погашения. Расчет графиков идет в зависимости от их параметров.


orv_members хранит записи об участниках ОРВ:
	ФИО
	пол (логического типа: мужской ли пол) - для правильного вывода окончаний в договор займа
	паспортные данные (серия, номер, дата выдачи, кем выдан)
	адрес регистрации
	фактический адрес 
	код, указывающий, кем был приведен участник - последовательность id участников от корневого до непосредственно приведшего, разделенных запятыми
	заявка на вклад (>0) или займ (<0)
	комментарий
обязательные для заполнения поля: ФИО и пол.	

fv_schedule хранит записи об изменениях графика договора 
	Дата начала действия
	Код причины создания графика
	Сумма операции как комментарий к причине
	Комментарий
fv_schedule_state хранит записи о платежах, запланированных в момент создания графика
	Комментарий - формула расчета процентов
	фактические проводки и планируемые хранятся в одной таблице, потому что если хранить в разных, то будет дублирование данных
	Сопровождение договора заключается в простановке планируемым проводкам признака фактических.
	признак фактичности - наличие в fv_payment записи с датой и schedile_id, как у записи.
fv_payment хранит записи о фактических платежах и просрочке
Разделение на fv_schedule_state и fv_payment удобно для учета просрочки, чтобы не дублировать данные в ситуации, когда заемщик гасит просрочку: в случае гашения просрочки записи добавляются только в fv_payment.

При выборе графика выводить:
	фактические предшествующих графиков до даты начала действия данного графика
	все записи данного графика 
	fv_payment до даты начала действия следующего графика
Выводить fv_schedule_state и fv_payment связанными по дате.
Получается сложный запрос с outer join.
Гораздо более простой запрос был бы при внесении в fv_payment фактических состояний по всем счетам:
	фактические состояния до даты начала действия следующего графика
	все записи данного графика 
Состояния ОД, процентов по ОД и планового платежа буду совпадать в fv_schedule_state и fv_payment
Выбран вариант без дублирования. Альтернативный вариант приведен для понимания с точки зрения пользователя.

Нельзя создавать запись в fv_payment, если между датой создаваемой записи и датой последнего платежа есть записи действующего графика (другой вариант - выносить их на просрочку).


Не допускается платеж по договору до уже введенного платежа => невозможен график до последнего графика.

Нужен простой алгоритм погашения с простой отменой!
На входе сумма(v_sum), дата (v_date), причина создания графика, комментарий к платежу

1. Если были платежи после даты, выход с сообщением об ошибке.
	select count(1) from fv_payment
	where agr_id=? and state_date>?
2. Прочитать состояние всех счетов на дату последнего платежа (дата, просроченный долг; основной долг).
	select state_date, overdue_remainder from fv_payment
	where id = (
		select max(id) from fv_payment
		where agr_id=?
	)
	
	v_last_state_date;v_last_remainder;v_last_overdue_remainder
	v_last_schedule_id = (
		select max(id) from fv_schedule
		where agr_id=?
	)
	
	select remainder from fv_schedule_state
	where state_date=v_last_state_date and schedule_id = v_last_schedule_id
begin	
3. Вынос на просрочку платежей между датой погашения и датой последнего платежа
  select state_date, payment from fv_schedule_state
  where v_last_state_date<state_date and state_date<v_date and schedule_id = v_last_schedule_id
	
	v_overdue_interest = Schedule::getOverDueInterest(v_last_overdue_remainder, v_last_state_date, v_cur_state_date, null);
	v_cur_overdue_remainder = v_last_overdue_remainder+v_overdue_interest+v_cur_payment
	
	fv_payment(v_cur_state_date, 0, v_cur_overdue_remainder, v_overdue_interest, -v_cur_payment, v_last_schedule_id)
	v_last_state_date = v_cur_state_date
4. Рассчитать остаток ОД после погашения, проценты и платеж в счет ОД и процентов. 
   Рассчитать изменение просрочки (ОД_П, ОД_Ф).
   Создать запись в fv_payment с датой, суммой и просрочкой.
   
   select payment from fv_schedule_state
   where state_date=v_date and schedule_id = v_last_schedule_id
   Если нет, значит v_payment=0
     
   v_overdue_interest = Schedule::getOverDueInterest(v_last_overdue_remainder, v_last_state_date, v_date, null);
   v_cur_all_remainder = v_last_overdue_remainder+v_overdue_interest+v_payment
   if (v_sum > v_cur_all_remainder){
	Schedule::recalcLastSchedule(v_last_schedule_id, v_sum-v_last_overdue_remainder-v_overdue_interest, v_date, v_dop);
	v_last_schedule_id = getLastSchedule()
	fv_payment(v_date, v_sum, 0, v_overdue_interest, 
			v_overdue_interest+v_last_overdue_remainder, v_last_schedule_id)
   }else{
	fv_payment(v_date, v_sum, v_cur_all_remainder-v_sum, v_overdue_interest, 
			v_sum-v_payment, (v_payment)?v_last_schedule_id:0)
   }
   
   
5. Если в действующем графике нет строки с параметрами из [4], То создать новый график, начиная со строки с параметрами [4].
rollback/commit

Отмена платежа (id):
	Если платеж ссылается на первую строку в графике(), то удалить график.
	delete fv_schedule where id = (
		select schedule_id from fv_payment
		where id=v_id
	) and start_date=(
		select state_date from fv_payment
		where id=v_id
	)
	удалить строку из fv_payment
Нельзя удалить график без отмены платежа	
	
Создать тесты для алгоритма погашения:
таблицы с исходными данными, соответствущие им таблицы с конечными данными, временная таблица

Варианты платежей:
	Совпадает по дате и сумме с платежом по графику
	Совпадает по дате платежом по графику
		сумма больше плановой
			создать новый график
		сумма меньше плановой
			вынос части на просрочку
	Отсутствовал платеж в дату графика (частный случай "Совпадает по дате платежом по графику/сумма меньше плановой")
		вынос всей суммы планового платежа на просрочку
	Погашение просрочки



Не устанавливать closed, пока остаток основного долга >0
Выводить предупреждение при закрытии, если остаток ПД >0

График с минимальными start_date, id должен быть с типом "Выдача"

Минимальная дата из fv_payment - дата выдачи
Минимальная дата из fv_schedule - дата подписания

Плановая дата окончания - максимальная дата из строк графика с наибольшим id

У графика должна быть хотя бы 1 строка. Последняя (с максимальной датой) строка должна иметь остаток 0

Займодавец не может быть созаемщиком по договору

При отмене платежа (удалении записи из fv_payment) должен удаляться график, созданный в связи с платежом
А при удалении графика - удаляться платеж
